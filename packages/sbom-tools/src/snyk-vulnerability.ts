export type KnownSeverity = 'low' | 'medium' | 'high' | 'critical';
export type Severity = KnownSeverity | 'unknown';

type Score = number | undefined;

const SEVERITY_TO_SCORE: Record<Severity, Score> = {
  low: 0,
  medium: 4,
  high: 7,
  critical: 9,
  unknown: undefined,
};

export function severityToScore(severity: Severity): Score {
  return SEVERITY_TO_SCORE[severity];
}

export function scoreToSeverity(score: number | undefined): Severity {
  if (score === undefined) {
    return 'unknown';
  }

  if (score >= 9) {
    return 'critical';
  }
  if (score >= 7) {
    return 'high';
  }
  if (score >= 4) {
    return 'medium';
  }
  return 'low';
}

export type SnykVulnerability = {
  id: string;
  title: string;
  CVSSv3: string;
  credit: string[];
  semver: {
    vulnerable: string;
  };
  exploit: string;
  patched: string[];
  patches: never[];
  fixedIn: string[];
  insights: {
    triageAdvice: null;
  };
  language: string;
  severity: Severity;
  cvssScore: number | undefined;
  functions: never[];
  moduleName: string;
  references: {
    url: string;
    title: string;
  }[];
  cvssDetails: never[];
  description: string;
  epssDetails: null;
  identifiers: {
    CVE: string[];
  };
  packageName: string;
  proprietary: boolean;
  creationTime: string;
  functions_new: never[];
  alternativeIds: never[];
  disclosureTime: string;
  packageManager: string;
  publicationTime: string;
  modificationTime: string;
  socialTrendAlert: boolean;
  severityWithCritical: Severity;
  from: string[];
  upgradePath: never[];
  isUpgradable: boolean;
  isPatchable: boolean;
  name: string;
  version: string;
};

export type SnykTestProjectResult = {
  vulnerabilities: SnykVulnerability[];
};

export function buildSnykVulnerability({
  id,
  packageName,
  packageVersion,
  score,
  cves,
  vulnerableSemver,
  fixedIn,
  description,
  url,
}: {
  cves: string[];
  fixedIn: string[];
  id: string;
  description?: string;
  packageName: string;
  score: number | undefined;
  url?: string;
  packageVersion: string;
  vulnerableSemver: string;
}): SnykVulnerability | PromiseLike<SnykVulnerability> {
  const severity = scoreToSeverity(score);
  return {
    id,
    title: id,
    CVSSv3: '-',
    credit: ['-'],
    semver: {
      vulnerable: vulnerableSemver,
    },
    exploit: '-',
    patched: fixedIn,
    patches: [],
    fixedIn: fixedIn,
    insights: {
      triageAdvice: null,
    },
    language: 'js',
    severity: severity,
    cvssScore: score,
    functions: [],
    moduleName: packageName,
    references: url
      ? [
          {
            url: url,
            title: 'Ref',
          },
        ]
      : [],
    cvssDetails: [],
    description: description ?? '',
    epssDetails: null,
    identifiers: {
      CVE: cves,
    },
    packageName: packageName,
    proprietary: true,
    creationTime: '-',
    functions_new: [],
    alternativeIds: [],
    disclosureTime: '-',
    packageManager: 'npm',
    publicationTime: '-',
    modificationTime: '-',
    socialTrendAlert: false,
    severityWithCritical: severity,
    from: [`${packageName}@${packageVersion}`],
    upgradePath: [],
    isUpgradable: true,
    isPatchable: false,
    name: packageName,
    version: packageVersion,
  };
}
